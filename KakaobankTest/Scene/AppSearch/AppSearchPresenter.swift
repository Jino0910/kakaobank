//
//  AppSearchPresenter.swift
//  KakaobankTest
//
//  Created by rowkaxl on 04/05/2019.
//  Copyright (c) 2019 rowkaxl. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AppSearchPresentationLogic {
    func presentRecentHistory(response: AppSearch.RecentHitory.Response)
}

class AppSearchPresenter: AppSearchPresentationLogic {
    weak var viewController: AppSearchDisplayLogic?
    
    // MARK: Do something
    
    func presentRecentHistory(response: AppSearch.RecentHitory.Response) {
        let sectionModels = self.getSectionModel(recentHitoryModels: response.recentHitoryModels)
        let viewModel = AppSearch.RecentHitory.ViewModel(recentHitoryModels: response.recentHitoryModels, sectionModels: sectionModels)
        viewController?.displayRecentHistory(viewModel: viewModel)
    }
}

extension AppSearchPresenter {
    
    func getSectionModel(recentHitoryModels: [RecentHitoryModel]) -> [AppSearchBaseItemSection] {
        
        var sectionModels: [AppSearchBaseItemSection] = [
            AppSearchBaseItemSection(items: [AppSearchBaseItem(type: .recentWordTitle, object: RecentHitoryModel(searchWord: "최근 검색어", date: Date()))])
        ]
        
        for (index, item) in recentHitoryModels.enumerated() {
            
            guard index < 10 else { return sectionModels }
            sectionModels.append(AppSearchBaseItemSection(items: [
                AppSearchBaseItem(type: .recentWordContent, object: item)
                ]))
        }
        
        return sectionModels
    }
}
